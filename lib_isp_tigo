#!/bin/sh

if [ "$LIB_TIGO" = "loaded" ]; then
#  return
echo
fi
LIB_TIGO=loaded
. $PWD/lib_usb

TIGO=$PWD
CLEFT=$RUN/tigo_credit
PLEFT=$RUN/tigo_promotion
DEV=/dev/ttyUSB2
TIGO_STATUS=$RUN/tigo_status
touch $TIGO_STATUS $CLEFT $PLEFT

#
# Promotion-add, get, update
#

isp_tigo_promotion_add(){
  log Promotion add $1
  if [ "$1" ]; then
    case "$1" in
      hour|30MB)
        PROMOTION=1111
        ;;
      day|100MB)
        PROMOTION=2424
        ;;
      week|1GB)
        PROMOTION=7777
        ;;
      month|5GB)
        PROMOTION=3030
        ;;
    esac
    if [ "$PROMOTION" ]; then
      # Testing for new version which has a global config-file
      if [ -f /etc/gammu.conf ]; then
        log Adding with gammu v2
        gammu sendsms TEXT $PROMOTION -text "kattir" 2>/dev/null
      else
        log Adding with gammu v1
        echo kattir | gammu --config $PWD/conf/gammurc sendsms TEXT $PROMOTION 2>/dev/null
      fi
    fi
  fi
  isp_tigo_promotion_update
  isp_tigo_credit_update
}

isp_tigo_promotion_get_raw(){
  # This should also work.. - simple test-cases
  #STR="30.000 MB INTERNET valide avant 04/10/2012."
  #STR=" 30.000 MB INTERNET valide avant 04/10/2012."
  #STR="250.00 CFA recharge bonus, 30.000 MB INTERNET valide avant 04/10/2012."
  #STR="250.00 CFA recharge bonus."
  STR=$( ussd_decode $( gcom_call get_promotion ) )
  log "Got string $STR"
  if rs "$STR" Octet; then
    log Found octets
    echo $STR | sed -e "s/.*MMS, \(.*\) Octet.*/\1/"
  elif rs "$STR" "INTERNET"; then
    log Found INTERNET
    STR=$( echo $STR | sed -e "s/.*recharge bonus, //" )
    BYTES=$( echo $STR | sed -e "s/[^0-9]*\([0-9]*\.[0-9]* ..\) INTERNET.*/\1/" )
    logger $BYTES left on internet
    echo $BYTES
  elif rs "$STR" "a marche"; then
    log Waiting for SMS
    if [ -e $DEV ]; then
      for w in $( seq 10 ); do
        log Waiting till $(( w * 5 )) seconds
        BYTES=$( gnokii --getsms SM 0 29 -d 2>&1 | grep octet | tail -n 1 )
        if [ "$BYTES" ]; then
          break;
        fi
        sleep 5
      done
    fi
    #sms_delete
    echo $BYTES | sed -e "s/.*MMS, \(.*\) octet.*/\1/"
  elif rs "$STR" "Vous n'avez pas"; then
    log "No promotion"
    echo 0
  elif rs "$STR" "recharge bonus"; then
    log "No promotion"
    echo 0
  elif rs "$STR" "KATTIR"; then
    log "Lonely kattir-message"
    echo 0
  fi
}

isp_tigo_promotion_get(){
  STR=$( isp_tigo_promotion_get_raw )
  if rs "$STR" MB; then
    echo "scale=0; ${STR/ MB/} * 1000000 / 1" | bc
  elif rs "$STR" kB; then
    echo "scale=0; ${STR/ kB/} * 1000 / 1" | bc
  else
    echo "$STR"
  fi
}

isp_tigo_promotion_update(){
  log Getting promotion
  P=$( isp_tigo_promotion_get )
  if [ "$P" ]; then
    echo $P > $PLEFT
  fi
  isp_update_vars
}

#
# Credit-add, send, get, update
#

isp_tigo_credit_add(){
  STR=$( get_ussd "123*$1" )
  log "Added credit $STR"
  isp_tigo_credit_update
  echo $STR
}

isp_tigo_credit_send(){
  STR=$( get_ussd "190*1234*235$2*$1" )
  log "Sent credit $2 to $1 -> $STR"
  isp_tigo_credit_update
  echo $STR
}

isp_tigo_credit_get(){
  STR=$( ussd_decode $( gcom_call get_credit ) )
  log "Got credit $STR"
  if rs "$STR" solde; then
    echo $STR | sed -e "s/.*est de \([0-9]*\)\..*/\1/"
  fi
}

isp_tigo_get_cell(){
  STR=$( gcom_call get_cell )
  log "Got cell $STR"
  echo $STR
}

isp_tigo_get_signal(){
  STR=$( gcom_call get_signal )
  log "Got signal $STR"
  echo $STR
}

isp_tigo_credit_update(){
  log Getting credit
  C=$( isp_tigo_credit_get )
  if [ "$C" ]; then
    echo $C | sed -e "s/\..*//" > $CLEFT
  fi
}

#
# Connection-start, status, stop
#

isp_connection_start(){
  if ! grep -q starting $TIGO_STATUS; then
    actionlog Starting tigo-connection
    pon tigo
    sleep 4
    if ! ps ax | grep -q pppd; then
      actionlog Oups - restarting connection
      pon tigo
    fi
    echo $( date +%s ) > $CONNSTAT-start
    echo starting > $TIGO_STATUS
  fi
}

isp_connection_status(){
  if grep_pppd | grep -q failed; then
    isp_connection_stop
    isp_connection_start
    echo 0
    return
  fi
  PPP=$( ip link | grep " ppp" | sed -e "s/.*\(ppp.\).*/\1/" )
  PAP=$( grep_pppd | grep PAP )
  PPP_IP=$( grep_pppd grep -A 3 PAP | grep local | sed -e "s/.* //" )
  TUN=$( ip link | grep " tun" | sed -e "s/.*\(tun.\).*/\1/" )
  ret=0
  for a in "$PPP" "$PAP" "$PPP_IP" "$TUN" ""; do
    if [ "$a" ]; then
      ret=$(( ret + 1 ))
    else
      echo $ret
      return
    fi
  done
}

isp_connection_stop(){
  if ! grep -q stopping $TIGO_STATUS; then
    echo stopping > $TIGO_STATUS
    actionlog Stopping tigo-connection
    while poff -a; do sleep 2; done
  fi
  isp_tigo_promotion_update
}

isp_connected(){
  if ifconfig | grep -q ppp; then
    echo yes
  else
    echo no
  fi
}

isp_update_vars(){
  if [ ! "$CLEFT$PLEFT" ]; then
    return
  fi
  if [ ! -f $CLEFT ]; then
    isp_tigo_credit_update
  fi
  CREDIT_LEFT=$( cat $CLEFT )
  if [ ! -f $PLEFT ]; then
    isp_tigo_promotion_update
  fi
  PROMOTION_LEFT=$(( $( cat $PLEFT ) - $( ppp_rx ) - $( ppp_tx ) ))
}

isp_update_vars
